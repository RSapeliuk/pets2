{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/logination/logination.component.html","./src/app/components/post/post.component.html","./src/app/components/registration/registration.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/logination/logination.component.css","./src/app/components/logination/logination.component.ts","./src/app/components/post/post.component.css","./src/app/components/post/post.component.ts","./src/app/components/registration/registration.component.css","./src/app/components/registration/registration.component.ts","./src/app/models/Post.ts","./src/app/models/User.ts","./src/app/services/auth.service.ts","./src/app/services/login-user.service.ts","./src/app/services/post.service.ts","./src/app/services/register-user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>Test routes</h1>\\n<button mat-button routerLink=\\\"/login\\\">Login</button>\\n<button mat-button *ngIf=\\\"isLogined\\\" routerLink=\\\"/user/:username/addPost\\\">Add Post</button>\\n<hr>\\n<hr>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<form (ngSubmit)=\\\"login()\\\">\\n  <label>Name: </label> <br>\\n  <input\\n      #nameI=\\\"ngModel\\\"\\n      type=\\\"text\\\"\\n      name=\\\"name\\\"\\n      placeholder=\\\"Enter your name\\\"\\n      [(ngModel)]=\\\"user.username\\\"> <br>\\n  <label>Password: </label> <br>\\n  <input type=\\\"text\\\"\\n         name=\\\"password\\\"\\n         placeholder=\\\"Enter your password\\\"\\n         [(ngModel)]=\\\"user.password\\\"> <br>\\n  <button type=\\\"Submit\\\">Login</button>\\n</form>\\n\\nIf you don't have an account <a routerLink=\\\"/register\\\">register</a>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<form (ngSubmit)=\\\"savePost()\\\">\\n  <input matInput placeholder=\\\"Title\\\"\\n         [(ngModel)]=\\\"post.title\\\"\\n         name=\\\"title\\\"><hr>\\n  <textarea matInput placeholder=\\\"Additional info\\\"\\n            [(ngModel)]=\\\"post.optional_field\\\"\\n            name=\\\"additional_info\\\"></textarea><hr>\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"\\n         [(ngModel)]=\\\"post.date\\\"\\n         name=\\\"date\\\"><hr>\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker></mat-datepicker>\\n  <hr>\\n  <input matInput [matDatepicker]=\\\"exppicker\\\" placeholder=\\\"Choose expiration date\\\"\\n         [(ngModel)]=\\\"post.expirationDate\\\"\\n         name=\\\"expirationDate\\\"><hr>\\n  <mat-datepicker-toggle matSuffix [for]=\\\"exppicker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #exppicker></mat-datepicker>\\n  <hr>\\n  <button mat-button type=\\\"submit\\\">Submit</button>\\n</form>\\n\"","module.exports = \"<form action=\\\"\\\"  (ngSubmit)=\\\"sendForm()\\\">\\n  <label>Name: </label> <br>\\n  <input\\n    #nameI=\\\"ngModel\\\"\\n    type=\\\"text\\\"\\n         name=\\\"name\\\"\\n         placeholder=\\\"Enter your name\\\"\\n  [(ngModel)]=\\\"user.username\\\"> <br>\\n  <label>Password: </label> <br>\\n  <input type=\\\"text\\\"\\n         name=\\\"password\\\"\\n         placeholder=\\\"Enter your password\\\"\\n         [(ngModel)]=\\\"user.password\\\"> <br>\\n  <label>Email: </label> <br>\\n  <input type=\\\"text\\\"\\n         name=\\\"email\\\"\\n         placeholder=\\\"Enter your email\\\"\\n         [(ngModel)]=\\\"user.email\\\"> <br>\\n  <button type=\\\"Submit\\\">Sign Up</button>\\n</form>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {RegistrationComponent} from './components/registration/registration.component';\nimport {LoginationComponent} from './components/logination/logination.component';\nimport {PostComponent} from './components/post/post.component';\n\n\nconst routes: Routes = [\n  {path: 'login', component: LoginationComponent},\n  {path: 'register', component: RegistrationComponent},\n  {path: 'user/:username/addPost', component: PostComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n  isLogined = true;\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {RegistrationComponent} from './components/registration/registration.component';\nimport {LoginationComponent} from './components/logination/logination.component';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {PostComponent} from './components/post/post.component';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatNativeDateModule,\n  MatToolbarModule\n} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    LoginationComponent,\n    PostComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW5hdGlvbi9sb2dpbmF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {LoginUserService} from '../../services/login-user.service';\r\nimport {User} from '../../models/User';\r\nimport {MatDialog} from '@angular/material';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/typings/dialog';\r\nimport {HttpHeaders} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {decode} from 'punycode';\r\n\r\n@Component({\r\n  selector: 'app-logination',\r\n  templateUrl: './logination.component.html',\r\n  styleUrls: ['./logination.component.css']\r\n})\r\nexport class LoginationComponent implements OnInit {\r\n  user: User = new User();\r\n  isLogined = false;\r\n  constructor(public loginUserService: LoginUserService, public router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login() {\r\n    this.loginUserService.loginUser(this.user).subscribe(response => {\r\n      const token = response.headers.get('Authorization');\r\n      console.log(token);\r\n      localStorage.setItem('token', token);\r\n      this.router.navigateByUrl('/');\r\n      if (token != null) {\r\n        this.isLogined = true;\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \".example-card {\\r\\n  max-width: 400px;\\r\\n}\\r\\n\\r\\n.example-header-image {\\r\\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wb3N0L3Bvc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1GQUFtRjtFQUNuRixzQkFBc0I7QUFDeEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Bvc3QvcG9zdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY2FyZCB7XHJcbiAgbWF4LXdpZHRoOiA0MDBweDtcclxufVxyXG5cclxuLmV4YW1wbGUtaGVhZGVyLWltYWdlIHtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2h0dHBzOi8vbWF0ZXJpYWwuYW5ndWxhci5pby9hc3NldHMvaW1nL2V4YW1wbGVzL3NoaWJhMS5qcGcnKTtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG59XHJcbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {Post} from '../../models/Post';\nimport {PostService} from '../../services/post.service';\nimport {AuthService} from '../../services/auth.service';\nimport {User} from '../../models/User';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  post: Post = new Post();\n  user: User;\n\n  constructor(public postService: PostService, public authService: AuthService) {\n  }\n\n  ngOnInit() {\n    this.authService.auth().subscribe(value => {\n      this.user = value;\n      console.log(this.user);\n    });\n  }\n\n  savePost() {\n    this.postService.savePost(this.post, this.user).subscribe(value => console.log(value));\n    console.log(this.user);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {User} from '../../models/User';\nimport {NgForm} from '@angular/forms';\nimport {RegisterUserService} from '../../services/register-user.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  user: User = new User();\n\n  constructor(public registerUserService: RegisterUserService) {\n  }\n\n  ngOnInit() {\n  }\n\n  sendForm() {\n    this.registerUserService.saveUser(this.user).subscribe(value => console.log(value));\n  }\n}\n","import {User} from './User';\r\n\r\nexport class Post {\r\n  constructor(public title?: string,\r\n              public kind?: string,\r\n              public photo?,\r\n              public date?: Date,\r\n              public expirationDate?: Date,\r\n              public optional_field?: string,\r\n              ) {\r\n\r\n  }\r\n}\r\n","export class User {\r\n  constructor(public id?: number, public username?: string, public email?: string, public password?: string) {\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {User} from '../models/User';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  url = '/authUser';\n\n  constructor(public http: HttpClient) {\n  }\n\n  auth(): Observable<User> {\n    return this.http.get<User>(this.url, {headers: new HttpHeaders({'Authorization': localStorage.getItem('token')})});\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from '../models/User';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginUserService {\n  url = '/login';\n\n  constructor(public http: HttpClient) {\n\n  }\n\n  loginUser(loginUser: User) {\n    return this.http.post(this.url, loginUser, {observe: 'response', responseType: 'text'});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Post} from '../models/Post';\nimport {Observable} from 'rxjs';\nimport {User} from '../models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  constructor(public http: HttpClient) { }\n  url = '/addPost/';\n\n\n\n  savePost(userPost: Post, user: User): Observable<any> {\n    const headers: HttpHeaders = new HttpHeaders();\n    headers.append('Authorization', localStorage.getItem('token'));\n    headers.append('Content-Type', 'application/json');\n    return  this.http.post<any>(this.url + user.id, userPost, {headers});\n  }\n}\n\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from '../models/User';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterUserService {\n URL = '/signup';\n  constructor(public http: HttpClient) {\n  }\n\n  saveUser(someUser: User): Observable<User> {\n    return this.http.post<User>(this.URL, someUser);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}